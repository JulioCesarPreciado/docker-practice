services:
  postgres:
    image: postgres:17
    container_name: ${APP_NAME}-postgres
    restart: always
    ports:
      - "${POSTGRES_PORT:-5432}:5432"
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: postgres
    volumes:
      - pgdata:/var/lib/postgresql/data
      - ./init-multiple-db.sh:/docker-entrypoint-initdb.d/init-multiple-db.sh
    networks:
      - ${NETWORK_NAME:-app_net}

  backup:
    image: postgres:17
    container_name: ${APP_NAME}-backup
    depends_on:
      - postgres
    entrypoint: >
      bash -c '
        while true; do
          echo "ðŸ”„ Starting backup process..."
          TIMESTAMP=$$(date '+%Y-%m-%d_%H-%M-%S')
          BACKUP_FILE="/backups/backup_$$TIMESTAMP.sql.gz"
          pg_dump -h postgres -U ${POSTGRES_USER} -d ${POSTGRES_DB} | gzip > $$BACKUP_FILE
          echo "ðŸ“¦ Backup created: $$BACKUP_FILE"

          # Drop and recreate the _backup database
          echo "ðŸ§¨ Dropping and recreating ${POSTGRES_DB}_backup..."
          psql -h postgres -U ${POSTGRES_USER} -d postgres -c "DROP DATABASE IF EXISTS ${POSTGRES_DB}_backup;"
          psql -h postgres -U ${POSTGRES_USER} -d postgres -c "CREATE DATABASE ${POSTGRES_DB}_backup;"

          # Restore the dump into the _backup database
          echo "ðŸŒ€ Restoring into ${POSTGRES_DB}_backup..."
          gunzip -c $$BACKUP_FILE | psql -h postgres -U ${POSTGRES_USER} -d ${POSTGRES_DB}_backup
          
          # Keep only the last 10 backups
          ls -1t /backups/backup_*.sql.gz | tail -n +11 | xargs -r rm --

          sleep ${BACKUP_INTERVAL}
        done
      '
    environment:
      PGPASSWORD: ${POSTGRES_PASSWORD}
    volumes:
      - ${BACKUP_PATH:-./backups}:/backups
    networks:
      - ${NETWORK_NAME:-app_net}

volumes:
  pgdata:

networks:

